import asyncio

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message

from config import bot, admin_group, users_data_repo, teacher_thread, parent_thread, pupil_thread, supabase
from phrases import LAST_STAND
from src.keyboards.pupil_keyboard import event_info_keyboard, events_keyboard
from src.keyboards.user_keyboards import role_buttons
from src.states.user_states import User

last_stand_router = Router()


async def db_checker(message: Message):
    #if message.text == role_buttons['teacher']:
        #message_thread = teacher_thread
    if message.text == role_buttons['parent']:
        message_thread = parent_thread
    elif message.text == role_buttons['pupil']:
        message_thread = pupil_thread
    else:
        message_thread = 0

    user_data = users_data_repo.get_user_by_chat_id(message.chat.id)
    user_data = user_data.data[0]
    adm_mes = await bot.send_message(
        chat_id=admin_group,
        message_thread_id=message_thread,
        text=f"(–ü—Ä–æ—Ö–æ–¥–∏—Ç —Ç–µ—Å—Ç) –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} - @{message.from_user.username}"
             f"\n–§–ò–û: {user_data['name']}"
             f"\n–†–æ–ª—å: {message.text}"
             f"\n–¢–µ–ª–µ—Ñ–æ–Ω: +{user_data['tg_phone']}",
    )
    users_data_repo.update_field(message.chat.id, "message", adm_mes.message_id)


@last_stand_router.callback_query(User.end)
async def handle_event_end(call: Message):
    event_dict = {
        "e_1": """<b>–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫—É—Ä—Å—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ 8-11 –∫–ª–∞—Å—Å–æ–≤</b>

üìç <b>–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:</b> –ù–∞ –±–∞–∑–µ –≤–∞—à–µ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è

üéØ <b>–ß—Ç–æ –ø–æ–ª—É—á–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫:</b>

üî• –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ —è–∑—ã–∫—É Python —Å –Ω—É–ª—è

üë®‚Äçüè´ –ó–∞–Ω—è—Ç–∏—è —Å —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏

üíº –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ—Ç IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ (frontend/backend)

üéÆ –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤

üìÇ –ì–æ—Ç–æ–≤–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è

üìú –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (—Å —Ñ–∏–∫—Å–∞—Ü–∏–µ–π –Ω–∞ –ì–æ—Å—É—Å–ª—É–≥–∞—Ö)

üíé –î–æ 5 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –∫ –ï–ì–≠

ü§ù –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ IT-—Å—Ç—É–¥–∏–∏ Botoforge

üéØ –í–Ω–µ—É—á–µ–±–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: –∫–≤–µ—Å—Ç—ã, –ø–µ–π–Ω—Ç–±–æ–ª, –ª–∞–∑–µ—Ä—Ç–∞–≥

üìÖ <b>–§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è:</b>

–û—á–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é

–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–≥–ª–∞—Å—É–µ—Ç—Å—è —Å–æ —à–∫–æ–ª–æ–π

–ì—Ä—É–ø–ø—ã —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è —Å —É—á–µ—Ç–æ–º –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ —É—Ä–æ–≤–Ω—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏

‚ùó <b>–í–∞–∂–Ω–æ:</b>

–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç —Å—Ç—Ä–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ

–£—á–∞—Å—Ç–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑

–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è

üëâ <b>–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è</b>: –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∏–∂–µ""",


        "e_2": """üî• –ü—Ä–∏–≤–µ—Ç, –±—É–¥—É—â–∏–π –º–∞—Å—Ç–µ—Ä –æ–±—â–µ–Ω–∏—è —Å –ò–ò!
        
ü§ñ –ú—ã —Ä–∞–∑–±–µ—Ä—ë–º, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã (–ø—Ä–æ–º–ø—Ç—ã), —á—Ç–æ–±—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–µ–ª–∞–ª –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å. –¢–µ–∫—Å—Ç—ã, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∑–∞–¥–∞—á–∏ ‚Äî –≤—Å—ë –±—É–¥–µ—Ç —Ç–µ–±–µ –ø–æ –ø–ª–µ—á—É!

üìö 10 –∑–∞–Ω—è—Ç–∏–π –ø–æ 2 –∞–∫. —á–∞—Å–∞, 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é ‚Äî –∏ —Ç—ã –ø—Ä–æ–∫–∞—á–∞–µ—à—å—Å—è –ø–æ –ø–æ–ª–Ω–æ–π.

üöÄ –°—Ç–∞—Ä—Ç—É–µ–º 2 –∏—é–Ω—è, —Ñ–∏–Ω–∞–ª–∏–º 6 –∏—é–ª—è. –ü–æ–¥–∫–ª—é—á–∞–π—Å—è ‚Äî –≤–ø–µ—Ä–µ–¥–∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω–æ–µ!""",


        "e_3": """üî• –•–∞–ª–æ—É –±–æ–∏–∑ —ç–Ω–¥ –≥—ë—Ä–ª–∑!
–ö—É—Ä—Å –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å–∞–π—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é No/Low-–∫–æ–¥ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∞-–ª—è Tilda, Figma –∏ –≤—Å—è–∫–∏–µ —Ä–∞–∑–Ω—ã–µ –ò–ò—à–∫–∏ ‚Äî –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—Å—ë: —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —Å–æ–≤–µ—Ç—ã –∏ –ø—Ä–∏–º–µ—Ä—ã –∏, –≥–ª–∞–≤–Ω–æ–µ, –ø—Ä—è–º–æ–π –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø—Ä–µ–ø–æ–º –∫—É—Ä—Å–∞!

üìö 10 –∑–∞–Ω—è—Ç–∏–π –ø–æ 2 –∞–∫. —á–∞—Å–∞ (—ç—Ç–æ 90 –º–∏–Ω—É—Ç), 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é ‚Äî –∏ —Ç—ã –ø—Ä–æ–∫–∞—á–∞–µ—à—å—Å—è –ø–æ –ø–æ–ª–Ω–æ–π. –î–∞–∂–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–π—Ç–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —ç—Ç–æ–º. –ù–æ —ç—Ç–æ –µ—Å–ª–∏ —Ö–æ—Ä–æ—à–æ –Ω–∞—É—á–∏—à—å—Å—è.

üöÄ –°—Ç–∞—Ä—Ç—É–µ–º 2 –∏—é–Ω—è, —Ñ–∏–Ω–∞–ª–∏–º 6 –∏—é–ª—è. –ü–æ–¥–∫–ª—é—á–∞–π—Å—è ‚Äî –≤–ø–µ—Ä–µ–¥–∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω–æ–µ!""",


        "e_4": """üíª –ü—Ä–∏–≤–µ—Ç!
–ö–∞–Ω–∞–ª —Å —Å–µ—Ä–∏–µ–π –≤–µ–±–∏–Ω–∞—Ä–æ–≤ ¬´–ì–æ—Ç–æ–≤–∏–º—Å—è —Å—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º¬ª ‚Äî –æ—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–π —à–∞–≥ –≤ –º–∏—Ä IT!

üìö –ú—ã –ø–æ–≥–æ–≤–æ—Ä–∏–º –ø—Ä–æ –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —É–∑–Ω–∞–µ–º, –∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω—ã –∏ –∫–∞–∫ –Ω–∞—á–∞—Ç—å —É—á–∏—Ç—å—Å—è —É–∂–µ —Å–µ–π—á–∞—Å.

üß† –í–ø–µ—Ä–µ–¥–∏ 10 –≤–µ–±–∏–Ω–∞—Ä–æ–≤ –ø–æ 2 –∞–∫. —á–∞—Å–∞, –ø–æ 2 –∑–∞–Ω—è—Ç–∏—è –≤ –Ω–µ–¥–µ–ª—é ‚Äî –æ–Ω–ª–∞–π–Ω, —É–¥–æ–±–Ω–æ, –ø–æ –¥–µ–ª—É.

üìÖ –í—Å—Ç—Ä–µ—á–∞–µ–º—Å—è —Å 16 –∏—é–Ω—è –ø–æ 20 –∏—é–ª—è ‚Äî –æ—Å—Ç–∞–≤–∞–π—Å—è –Ω–∞ —Å–≤—è–∑–∏, –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–æ! """,


        "e_5": """Marketing Yard: –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã—Ö –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤

–£–∑–Ω–∞–µ–º, –∫–∞–∫ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å –ò–¢-—Ä–µ—à–µ–Ω–∏—è, –∏ –∫–∞–∫–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ 2025 –≥–æ–¥—É. –†–∞–∑–±–µ—Ä—ë–º —É—Å–ø–µ—à–Ω—ã–µ –∫–µ–π—Å—ã: –æ—Ç –∑–∞–ø—É—Å–∫–∞ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –¥–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Ö –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ä—ã–Ω–æ–∫. –ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–º, –≤ —Ç–æ–º —á–∏—Å–ª–µ –Ω–∞ –±–∞–∑–µ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –ò–ò.

14 –∏—é–Ω—è –≤ 15:00 - 15 –∏—é–Ω—è –≤ 20:00, –¢–æ—á–∫–∞ –∫–∏–ø–µ–Ω–∏—è –û–º—Å–∫ (—É–ª. –ú–∞—Ä—à–∞–ª–∞ –ñ—É–∫–æ–≤–∞, –¥. 21)"""
    }

    url_dict = {
        "e_1": "https://docs.google.com/forms/d/e/1FAIpQLSfbcCJGJRqBQaNE6YklC4lh7sak_Bx3LKDdyDc62uVtpLEP3w/viewform",
        "e_2": "https://t.me/promptmaster_algo",
        "e_3": "https://t.me/nolowcode4web",
        "e_4": "https://t.me/prepare2prog",
        "e_5": "https://leader-id.ru/events/542377"
    }

    await bot.send_message(
        chat_id=call.from_user.id,
        text=event_dict[call.data],
        reply_markup=event_info_keyboard("‚ùóÔ∏è –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å ‚ùó", url_dict[call.data]),
        parse_mode="HTML"
    )


@last_stand_router.message(Command('spamtest'), F.chat.id == 820176381)
async def spam_attack(message: Message):
    text = """üéâ –ù–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ –û–º—Å–∫–µ!
–ú—ã –æ–±–Ω–æ–≤–∏–ª–∏ —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π ‚Äî —Ç–µ–ø–µ—Ä—å –≤ –±–æ—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–≤–µ–∂–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–π–¥—É—Ç –≤ –û–º—Å–∫–µ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"""
    response = supabase.table('UserData').select('*').execute()
    data = response.data
    counter = 0
    await bot.send_message(chat_id=message.chat.id,
                           text=text,
                           parse_mode='HTML')

    for userdata in data:
        try:
            await bot.send_photo(chat_id=userdata['chat_id'],
                                 text=text,
                                 parse_mode='HTML',
                                 reply_markup=events_keyboard())
            counter += 1
        except Exception as e:
            await bot.send_message(chat_id=message.chat.id,
                                   text=f"{counter} {userdata['chat_id']} - –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n {str(e)})",
                                   parse_mode='HTML')

    print('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', counter)


@last_stand_router.message(Command('spam'), F.chat.id == 820176381)
async def spam_attack(message: Message):
    text = """üéâ –ù–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ –û–º—Å–∫–µ!
–ú—ã –æ–±–Ω–æ–≤–∏–ª–∏ —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π ‚Äî —Ç–µ–ø–µ—Ä—å –≤ –±–æ—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–≤–µ–∂–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–π–¥—É—Ç –≤ –û–º—Å–∫–µ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"""
    response = supabase.table('UserData').select('*').execute()
    data = response.data
    counter = 0
    await bot.send_message(chat_id=message.chat.id,
                           text=text,
                           parse_mode='HTML')

    for userdata in data:
        try:
            await bot.send_photo(chat_id=userdata['chat_id'],
                                 text=text,
                                 parse_mode='HTML',
                                 reply_markup=events_keyboard())
            counter += 1
        except Exception as e:
            await bot.send_message(chat_id=message.chat.id,
                                   text=f"{counter} {userdata['chat_id']} - –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n {str(e)})",
                                   parse_mode='HTML')

    print('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', counter)


@last_stand_router.message(F.chat.id != admin_group)
async def handle_last_stand(message: Message):
    chat_id = message.chat.id
    await bot.send_message(
        chat_id=chat_id,
        text=LAST_STAND
    )


